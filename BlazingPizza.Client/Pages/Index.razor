@page "/"
@inject HttpClient HttpClient //Defines property type and property name, in this case the dependency injection handles the directive call to HttpClient in Index

<!--h1>Blazing Pizzas</-->

<div class="main">
    <ul class="pizza-cards">
        @if (specials != null)
        {
            @foreach (var special in specials)
            {
                <li @onclick="@(() => ShowingConfigureDialog(special))"   style="background-image: url('@special.ImageUrl')">
                    <div class="pizza-info">
                        <span class="title">@special.Name</span>
                        @special.Description
                        <span class="price">@special.GetFormattedBasePrice()</span>
                    </div>
                </li>
            }
        }
    </ul>
</div>

<!--Overlays Index page when selected-->
@if (showingConfiguringDialog)
{
    <ConfigurePizzaDialog Pizza="configuringPizza" OnCancel="CancelConfigurePizzaDialog"/>
}

@code{
    List<PizzaSpecial> specials; //Defined in BlazingPizza.Shared
    Pizza configuringPizza;
    bool showingConfiguringDialog;


    protected override async Task OnInitializedAsync()
    {
        specials = await HttpClient.GetFromJsonAsync<List<PizzaSpecial>>("specials", BlazingPizza.OrderContext.Default.ListPizzaSpecial);
    }

    void ShowingConfigureDialog(PizzaSpecial special)
    {
        configuringPizza = new Pizza()
            {
                Special = special,
                SpecialId = special.Id,
                Size = Pizza.DefaultSize,
                Toppings = new List<PizzaTopping>(),
            };

        showingConfiguringDialog = true;

    }

    void CancelConfigurePizzaDialog()
    {
        configuringPizza = null;
        showingConfiguringDialog = false;
    }
}